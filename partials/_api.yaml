basePath: /v1
consumes:
- application/json
definitions:
  App:
    properties:
      id:
        type: string
      name:
        type: string
      organization:
        $ref: '#/definitions/Organization'
      status:
        type: string
    type: object
  CheckStatus:
    properties:
      name:
        type: string
      output:
        type: string
      status:
        type: string
      updated_at:
        type: string
    type: object
  CreateAppRequest:
    properties:
      app_name:
        type: string
      network:
        type: string
      org_slug:
        type: string
    type: object
  CreateLeaseRequest:
    properties:
      description:
        type: string
      ttl:
        type: integer
    type: object
  CreateMachineRequest:
    properties:
      config:
        allOf:
        - $ref: '#/definitions/api.MachineConfig'
        description: An object defining the Machine configuration
      lease_ttl:
        type: integer
      lsvd:
        type: boolean
      name:
        description: Unique name for this Machine. If omitted, one is generated for
          you
        type: string
      region:
        description: The target region. Omitting this param launches in the same region
          as your WireGuard peer connection (somewhere near you).
        type: string
      skip_launch:
        type: boolean
      skip_service_registration:
        type: boolean
    type: object
  CreateVolumeRequest:
    properties:
      compute:
        $ref: '#/definitions/api.MachineGuest'
      encrypted:
        type: boolean
      fstype:
        type: string
      machines_only:
        type: boolean
      name:
        type: string
      region:
        type: string
      require_unique_zone:
        type: boolean
      size_gb:
        type: integer
      snapshot_id:
        description: restore from snapshot
        type: string
      snapshot_retention:
        type: integer
      source_volume_id:
        description: fork from remote volume
        type: string
    type: object
  ErrorResponse:
    properties:
      details:
        description: Deprecated
      error:
        type: string
      status:
        $ref: '#/definitions/main.statusCode'
    type: object
  ExtendVolumeRequest:
    properties:
      size_gb:
        type: integer
    type: object
  ExtendVolumeResponse:
    properties:
      needs_restart:
        type: boolean
      volume:
        $ref: '#/definitions/Volume'
    type: object
  ImageRef:
    properties:
      digest:
        type: string
      labels:
        additionalProperties:
          type: string
        type: object
      registry:
        type: string
      repository:
        type: string
      tag:
        type: string
    type: object
  Lease:
    properties:
      description:
        description: Description or reason for the Lease.
        type: string
      expires_at:
        description: ExpiresAt is the unix timestamp in UTC to denote when the Lease
          will no longer be valid.
        type: integer
      nonce:
        description: Nonce is the unique ID autogenerated and associated with the
          Lease.
        type: string
      owner:
        description: Owner is the user identifier which acquired the Lease.
        type: string
      version:
        description: Machine version
        type: string
    type: object
  ListApp:
    properties:
      id:
        type: string
      machine_count:
        type: integer
      name:
        type: string
      network: {}
    type: object
  ListAppsResponse:
    properties:
      apps:
        items:
          $ref: '#/definitions/ListApp'
        type: array
      total_apps:
        type: integer
    type: object
  ListenSocket:
    properties:
      address:
        type: string
      proto:
        type: string
    type: object
  Machine:
    properties:
      checks:
        items:
          $ref: '#/definitions/CheckStatus'
        type: array
      config:
        $ref: '#/definitions/api.MachineConfig'
      created_at:
        type: string
      events:
        items:
          $ref: '#/definitions/MachineEvent'
        type: array
      id:
        type: string
      image_ref:
        $ref: '#/definitions/ImageRef'
      instance_id:
        description: InstanceID is unique for each version of the machine
        type: string
      name:
        type: string
      nonce:
        description: Nonce is only every returned on machine creation if a lease_duration
          was provided.
        type: string
      private_ip:
        description: PrivateIP is the internal 6PN address of the machine.
        type: string
      region:
        type: string
      state:
        type: string
      updated_at:
        type: string
    type: object
  MachineEvent:
    properties:
      id:
        type: string
      request: {}
      source:
        type: string
      status:
        type: string
      timestamp:
        type: integer
      type:
        type: string
    type: object
  MachineExecRequest:
    properties:
      cmd:
        description: 'Deprecated: use Command instead'
        type: string
      command:
        items:
          type: string
        type: array
      timeout:
        type: integer
    type: object
  MachineVersion:
    properties:
      user_config:
        $ref: '#/definitions/api.MachineConfig'
      version:
        type: string
    type: object
  Organization:
    properties:
      name:
        type: string
      slug:
        type: string
    type: object
  ProcessStat:
    properties:
      command:
        type: string
      cpu:
        type: integer
      directory:
        type: string
      listen_sockets:
        items:
          $ref: '#/definitions/ListenSocket'
        type: array
      pid:
        type: integer
      rss:
        type: integer
      rtime:
        type: integer
      stime:
        type: integer
    type: object
  SignalRequest:
    properties:
      signal:
        enum:
        - SIGABRT
        - SIGALRM
        - SIGFPE
        - SIGHUP
        - SIGILL
        - SIGINT
        - SIGKILL
        - SIGPIPE
        - SIGQUIT
        - SIGSEGV
        - SIGTERM
        - SIGTRAP
        - SIGUSR1
        type: string
    type: object
  StopRequest:
    properties:
      signal:
        type: string
      timeout:
        type: string
    type: object
  UpdateMachineRequest:
    properties:
      config:
        allOf:
        - $ref: '#/definitions/api.MachineConfig'
        description: An object defining the Machine configuration
      current_version:
        type: string
      lease_ttl:
        type: integer
      lsvd:
        type: boolean
      name:
        description: Unique name for this Machine. If omitted, one is generated for
          you
        type: string
      region:
        description: The target region. Omitting this param launches in the same region
          as your WireGuard peer connection (somewhere near you).
        type: string
      skip_launch:
        type: boolean
      skip_service_registration:
        type: boolean
    type: object
  UpdateVolumeRequest:
    properties:
      snapshot_retention:
        type: integer
    type: object
  Volume:
    properties:
      attached_alloc_id:
        type: string
      attached_machine_id:
        type: string
      block_size:
        type: integer
      blocks:
        type: integer
      blocks_avail:
        type: integer
      blocks_free:
        type: integer
      created_at:
        type: string
      encrypted:
        type: boolean
      fstype:
        type: string
      id:
        type: string
      name:
        type: string
      region:
        type: string
      size_gb:
        type: integer
      snapshot_retention:
        type: integer
      state:
        type: string
      zone:
        type: string
    type: object
  VolumeSnapshot:
    properties:
      created_at:
        type: string
      digest:
        type: string
      id:
        type: string
      size:
        type: integer
      status:
        type: string
    type: object
  api.DNSConfig:
    properties:
      nameservers:
        items:
          type: string
        type: array
      options:
        items:
          $ref: '#/definitions/api.dnsOption'
        type: array
      searches:
        items:
          type: string
        type: array
      skip_registration:
        type: boolean
    type: object
  api.File:
    description: A file that will be written to the Machine. One of RawValue or SecretName
      must be set.
    properties:
      guest_path:
        description: |-
          GuestPath is the path on the machine where the file will be written and must be an absolute path.
          For example: /full/path/to/file.json
        type: string
      raw_value:
        description: The base64 encoded string of the file contents.
        type: string
      secret_name:
        description: The name of the secret that contains the base64 encoded file
          contents.
        type: string
    type: object
  api.HTTPOptions:
    properties:
      compress:
        type: boolean
      h2_backend:
        type: boolean
      response:
        $ref: '#/definitions/api.HTTPResponseOptions'
    type: object
  api.HTTPResponseOptions:
    properties:
      headers:
        additionalProperties: {}
        type: object
    type: object
  api.MachineCheck:
    description: An optional object that defines one or more named checks. The key
      for each check is the check name.
    properties:
      grace_period:
        description: The time to wait after a VM starts before checking its health
        type: string
      headers:
        items:
          $ref: '#/definitions/api.MachineHTTPHeader'
        type: array
      interval:
        description: The time between connectivity checks
        type: string
      method:
        description: For http checks, the HTTP method to use to when making the request
        type: string
      path:
        description: For http checks, the path to send the request to
        type: string
      port:
        description: The port to connect to, often the same as internal_port
        type: integer
      protocol:
        description: For http checks, whether to use http or https
        type: string
      timeout:
        description: The maximum time a connection can take before being reported
          as failing its health check
        type: string
      tls_server_name:
        description: If the protocol is https, the hostname to use for TLS certificate
          validation
        type: string
      tls_skip_verify:
        description: For http checks with https protocol, whether or not to verify
          the TLS certificate
        type: boolean
      type:
        description: tcp or http
        type: string
    type: object
  api.MachineConfig:
    properties:
      auto_destroy:
        description: Optional boolean telling the Machine to destroy itself once it’s
          complete (default false)
        type: boolean
      checks:
        additionalProperties:
          $ref: '#/definitions/api.MachineCheck'
        type: object
      disable_machine_autostart:
        description: 'Deprecated: use Service.Autostart instead'
        type: boolean
      dns:
        $ref: '#/definitions/api.DNSConfig'
      env:
        additionalProperties:
          type: string
        description: An object filled with key/value pairs to be set as environment
          variables
        type: object
      files:
        items:
          $ref: '#/definitions/api.File'
        type: array
      guest:
        $ref: '#/definitions/api.MachineGuest'
      image:
        description: The docker image to run
        type: string
      init:
        $ref: '#/definitions/api.MachineInit'
      metadata:
        additionalProperties:
          type: string
        type: object
      metrics:
        $ref: '#/definitions/api.MachineMetrics'
      mounts:
        items:
          $ref: '#/definitions/api.MachineMount'
        type: array
      processes:
        items:
          $ref: '#/definitions/api.MachineProcess'
        type: array
      restart:
        $ref: '#/definitions/api.MachineRestart'
      schedule:
        type: string
      services:
        items:
          $ref: '#/definitions/api.MachineService'
        type: array
      size:
        description: 'Deprecated: use Guest instead'
        type: string
      standbys:
        description: |-
          Standbys enable a machine to be a standby for another. In the event of a hardware failure,
          the standby machine will be started.
        items:
          type: string
        type: array
      statics:
        items:
          $ref: '#/definitions/api.Static'
        type: array
      stop_config:
        $ref: '#/definitions/api.StopConfig'
    type: object
  api.MachineGuest:
    properties:
      cpu_kind:
        type: string
      cpus:
        type: integer
      gpu_kind:
        type: string
      gpus:
        type: integer
      host_dedication_id:
        type: string
      kernel_args:
        items:
          type: string
        type: array
      memory_mb:
        type: integer
    type: object
  api.MachineHTTPHeader:
    description: For http checks, an array of objects with string field Name and array
      of strings field Values. The key/value pairs specify header and header values
      that will get passed with the check call.
    properties:
      name:
        description: The header name
        type: string
      values:
        description: The header value
        items:
          type: string
        type: array
    type: object
  api.MachineInit:
    properties:
      cmd:
        items:
          type: string
        type: array
      entrypoint:
        items:
          type: string
        type: array
      exec:
        items:
          type: string
        type: array
      kernel_args:
        items:
          type: string
        type: array
      swap_size_mb:
        type: integer
      tty:
        type: boolean
    type: object
  api.MachineMetrics:
    properties:
      path:
        type: string
      port:
        type: integer
    type: object
  api.MachineMount:
    properties:
      add_size_gb:
        type: integer
      encrypted:
        type: boolean
      extend_threshold_percent:
        type: integer
      name:
        type: string
      path:
        type: string
      size_gb:
        type: integer
      size_gb_limit:
        type: integer
      volume:
        type: string
    type: object
  api.MachinePort:
    properties:
      end_port:
        type: integer
      force_https:
        type: boolean
      handlers:
        items:
          type: string
        type: array
      http_options:
        $ref: '#/definitions/api.HTTPOptions'
      port:
        type: integer
      proxy_proto_options:
        $ref: '#/definitions/api.ProxyProtoOptions'
      start_port:
        type: integer
      tls_options:
        $ref: '#/definitions/api.TLSOptions'
    type: object
  api.MachineProcess:
    properties:
      cmd:
        items:
          type: string
        type: array
      entrypoint:
        items:
          type: string
        type: array
      env:
        additionalProperties:
          type: string
        type: object
      exec:
        items:
          type: string
        type: array
      user:
        type: string
    type: object
  api.MachineRestart:
    description: The Machine restart policy defines whether and how flyd restarts
      a Machine after its main process exits. See https://fly.io/docs/machines/guides-examples/machine-restart-policy/.
    properties:
      max_retries:
        description: When policy is on-failure, the maximum number of times to attempt
          to restart the Machine before letting it stop.
        type: integer
      policy:
        description: |-
          * no - Never try to restart a Machine automatically when its main process exits, whether that’s on purpose or on a crash.
          * always - Always restart a Machine automatically and never let it enter a stopped state, even when the main process exits cleanly.
          * on-failure - Try up to MaxRetries times to automatically restart the Machine if it exits with a non-zero exit code. Default when no explicit policy is set, and for Machines with schedules.
        enum:
        - "no"
        - always
        - on-failure
        type: string
    type: object
  api.MachineService:
    properties:
      autostart:
        type: boolean
      autostop:
        type: boolean
      checks:
        items:
          $ref: '#/definitions/api.MachineCheck'
        type: array
      concurrency:
        $ref: '#/definitions/api.MachineServiceConcurrency'
      force_instance_description:
        type: string
      force_instance_key:
        type: string
      internal_port:
        type: integer
      min_machines_running:
        type: integer
      ports:
        items:
          $ref: '#/definitions/api.MachinePort'
        type: array
      protocol:
        type: string
    type: object
  api.MachineServiceConcurrency:
    properties:
      hard_limit:
        type: integer
      soft_limit:
        type: integer
      type:
        type: string
    type: object
  api.ProxyProtoOptions:
    properties:
      version:
        type: string
    type: object
  api.Static:
    properties:
      guest_path:
        type: string
      tigris_bucket:
        type: string
      url_prefix:
        type: string
    required:
    - guest_path
    - url_prefix
    type: object
  api.StopConfig:
    properties:
      signal:
        type: string
      timeout:
        type: string
    type: object
  api.TLSOptions:
    properties:
      alpn:
        items:
          type: string
        type: array
      default_self_signed:
        type: boolean
      versions:
        items:
          type: string
        type: array
    type: object
  api.dnsOption:
    properties:
      name:
        type: string
      value:
        type: string
    type: object
  main.statusCode:
    enum:
    - unknown
    - insufficient_capacity
    type: string
    x-enum-varnames:
    - unknown
    - capacityErr
externalDocs:
  url: https://fly.io/docs/machines/working-with-machines/
host: api.machines.dev
info:
  contact: {}
  description: |
    # Introduction

    Fly Machines are the compute behind the Fly.io platform. They are fast-launching VMs that can be started and stopped at subsecond speeds. A Machine is the configuration and state for a single VM running on our platform. Every Machine will belong to a Fly App; Apps can have more than one Machine. Read more [here](https://fly.io/docs/machines/).

    The Machines REST API allows you to provison and manage Apps, Machines and Volumes on the Fly.io platform. To manage other Fly.io resources like organizations, use the [GraphQL API](https://fly.io/docs/networking/custom-domains-with-fly/#graphql-api-notes).

    ## Authentication

    All requests must include the Fly API Token in the HTTP Headers as follows:

    ```
    Authorization: Bearer [TOKEN]
    ```

    You can get your API token using [flyctl](https://fly.io/docs/hands-on/install-flyctl/) by running `fly auth token`

    ## Base URL

    The easiest (and recommended) way to connect to the Machines API is to use the public `api.machines.dev` endpoint, a simpler and more performant alternative to connecting over WireGuard. You can still access your Machines directly over a WireGuard VPN, and use the private Machines API endpoint: `http://_api.internal:4280`. This method requires more setup.

    Follow the [instructions](https://fly.io/docs/networking/private-networking/#private-network-vpn) to set up a permanent WireGuard connection to your Fly.io [IPv6 private network](https://fly.io/docs/networking/private-networking/). Once you’re connected, Fly internal DNS should expose the Machines API endpoint at: `http://_api.internal:4280`

    ## Response Codes

    The API uses conventional HTTP status codes to signal whether a request was successful or not.

    Typically, 2xx HTTP status codes denote successful operations, 4xx codes imply failures related to the user, and 5xx codes suggest problems with the infrastructure.

    | Status | Description                                 |
    | :----: | ------------------------------------------- |
    | `200`  | Successful request.                         |
    | `201`  | Created successfully.                       |
    | `202`  | Successful request. No content.             |
    | `400`  | Check that the parameters were correct.     |
    | `401`  | The API key used was missing or invalid.    |
    | `404`  | The resource was not found.                 |
    | `5xx`  | Indicates an error with Fly.io API servers. |
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Machines API
  version: "1.0"
paths:
  /apps:
    get:
      description: |
        List all apps with the ability to filter by organization slug.
      operationId: Apps_list
      parameters:
      - description: The org slug, or 'personal', to filter apps
        in: query
        name: org_slug
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ListAppsResponse'
      summary: List Apps
      tags:
      - Apps
    post:
      description: |
        Create an app with the specified details in the request body.
      operationId: Apps_create
      parameters:
      - description: App body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/CreateAppRequest'
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create App
      tags:
      - Apps
  /apps/{app_name}:
    delete:
      description: |
        Delete an app by its name.
      operationId: Apps_delete
      parameters:
      - description: Fly App Name
        in: path
        name: app_name
        required: true
        type: string
      responses:
        "202":
          description: Accepted
      summary: Destroy App
      tags:
      - Apps
    get:
      description: |
        Retrieve details about a specific app by its name.
      operationId: Apps_show
      parameters:
      - description: Fly App Name
        in: path
        name: app_name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/App'
      summary: Get App
      tags:
      - Apps
  /apps/{app_name}/machines:
    get:
      description: |
        List all Machines associated with a specific app, with optional filters for including deleted Machines and filtering by region.
      operationId: Machines_list
      parameters:
      - description: Fly App Name
        in: path
        name: app_name
        required: true
        type: string
      - description: Include deleted machines
        in: query
        name: include_deleted
        type: boolean
      - description: Region filter
        in: query
        name: region
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Machine'
            type: array
      summary: List Machines
      tags:
      - Machines
    post:
      description: |
        Create a Machine within a specific app using the details provided in the request body.

        **Important**: This request can fail, and you’re responsible for handling that failure. If you ask for a large Machine, or a Machine in a region we happen to be at capacity for, you might need to retry the request, or to fall back to another region. If you’re working directly with the Machines API, you’re taking some responsibility for your own orchestration!
      operationId: Machines_create
      parameters:
      - description: Fly App Name
        in: path
        name: app_name
        required: true
        type: string
      - description: Create machine request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/CreateMachineRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Machine'
      summary: Create Machine
      tags:
      - Machines
  /apps/{app_name}/machines/{machine_id}:
    delete:
      description: |
        Delete a specific Machine within an app by Machine ID, with an optional force parameter to force kill the Machine if it's running.
      operationId: Machines_delete
      parameters:
      - description: Fly App Name
        in: path
        name: app_name
        required: true
        type: string
      - description: Machine ID
        in: path
        name: machine_id
        required: true
        type: string
      - description: Force kill the machine if it's running
        in: query
        name: force
        type: boolean
      responses:
        "200":
          description: OK
      summary: Destroy Machine
      tags:
      - Machines
    get:
      description: |
        Get details of a specific Machine within an app by the Machine ID.
      operationId: Machines_show
      parameters:
      - description: Fly App Name
        in: path
        name: app_name
        required: true
        type: string
      - description: Machine ID
        in: path
        name: machine_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Machine'
      summary: Get Machine
      tags:
      - Machines
    post:
      description: |
        Update a Machine's configuration using the details provided in the request body.
      operationId: Machines_update
      parameters:
      - description: Fly App Name
        in: path
        name: app_name
        required: true
        type: string
      - description: Machine ID
        in: path
        name: machine_id
        required: true
        type: string
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/UpdateMachineRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Machine'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update Machine
      tags:
      - Machines
  /apps/{app_name}/machines/{machine_id}/cordon:
    post:
      description: |
        “Cordoning” a Machine refers to disabling its services, so the Fly Proxy won’t route requests to it. In flyctl this is used by blue/green deployments; one set of Machines is started up with services disabled, and when they are all healthy, the services are enabled on the new Machines and disabled on the old ones.
      operationId: Machines_cordon
      parameters:
      - description: Fly App Name
        in: path
        name: app_name
        required: true
        type: string
      - description: Machine ID
        in: path
        name: machine_id
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Cordon Machine
      tags:
      - Machines
  /apps/{app_name}/machines/{machine_id}/events:
    get:
      description: |
        List all events associated with a specific Machine within an app.
      operationId: Machines_list_events
      parameters:
      - description: Fly App Name
        in: path
        name: app_name
        required: true
        type: string
      - description: Machine ID
        in: path
        name: machine_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/MachineEvent'
            type: array
      summary: List Events
      tags:
      - Machines
  /apps/{app_name}/machines/{machine_id}/exec:
    post:
      description: |
        Execute a command on a specific Machine and return the raw command output bytes.
      operationId: Machines_exec
      parameters:
      - description: Fly App Name
        in: path
        name: app_name
        required: true
        type: string
      - description: Machine ID
        in: path
        name: machine_id
        required: true
        type: string
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/MachineExecRequest'
      produces:
      - application/octet-stream
      - application/json
      responses:
        "200":
          description: Raw command output bytes are written back
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Execute Command
      tags:
      - Machines
  /apps/{app_name}/machines/{machine_id}/lease:
    delete:
      description: |
        Release the lease of a specific Machine within an app. Machine leases can be used to obtain an exclusive lock on modifying a Machine.
      operationId: Machines_release_lease
      parameters:
      - description: Fly App Name
        in: path
        name: app_name
        required: true
        type: string
      - description: Machine ID
        in: path
        name: machine_id
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Release Lease
      tags:
      - Machines
    get:
      description: |
        Retrieve the current lease of a specific Machine within an app. Machine leases can be used to obtain an exclusive lock on modifying a Machine.
      operationId: Machines_show_lease
      parameters:
      - description: Fly App Name
        in: path
        name: app_name
        required: true
        type: string
      - description: Machine ID
        in: path
        name: machine_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Lease'
      summary: Get Lease
      tags:
      - Machines
    post:
      description: |
        Create a lease for a specific Machine within an app using the details provided in the request body. Machine leases can be used to obtain an exclusive lock on modifying a Machine.
      operationId: Machines_create_lease
      parameters:
      - description: Fly App Name
        in: path
        name: app_name
        required: true
        type: string
      - description: Machine ID
        in: path
        name: machine_id
        required: true
        type: string
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/CreateLeaseRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Lease'
      summary: Create Lease
      tags:
      - Machines
  /apps/{app_name}/machines/{machine_id}/metadata:
    get:
      description: |
        Retrieve metadata for a specific Machine within an app.
      operationId: Machines_show_metadata
      parameters:
      - description: Fly App Name
        in: path
        name: app_name
        required: true
        type: string
      - description: Machine ID
        in: path
        name: machine_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get Metadata
      tags:
      - Machines
  /apps/{app_name}/machines/{machine_id}/metadata/{key}:
    delete:
      description: |
        Delete metadata for a specific Machine within an app by providing a metadata key.
      operationId: Machines_delete_metadata
      parameters:
      - description: Fly App Name
        in: path
        name: app_name
        required: true
        type: string
      - description: Machine ID
        in: path
        name: machine_id
        required: true
        type: string
      - description: Metadata Key
        in: path
        name: key
        required: true
        type: string
      responses:
        "204":
          description: No Content
      summary: Delete Metadata
      tags:
      - Machines
    post:
      description: |
        Update metadata for a specific machine within an app by providing a metadata key.
      operationId: Machines_update_metadata
      parameters:
      - description: Fly App Name
        in: path
        name: app_name
        required: true
        type: string
      - description: Machine ID
        in: path
        name: machine_id
        required: true
        type: string
      - description: Metadata Key
        in: path
        name: key
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update Metadata
      tags:
      - Machines
  /apps/{app_name}/machines/{machine_id}/ps:
    get:
      description: |
        List all processes running on a specific Machine within an app, with optional sorting parameters.
      operationId: Machines_list_processes
      parameters:
      - description: Fly App Name
        in: path
        name: app_name
        required: true
        type: string
      - description: Machine ID
        in: path
        name: machine_id
        required: true
        type: string
      - description: Sort by
        in: query
        name: sort_by
        type: string
      - description: Order
        in: query
        name: order
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ProcessStat'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: List Processes
      tags:
      - Machines
  /apps/{app_name}/machines/{machine_id}/restart:
    post:
      description: |
        Restart a specific Machine within an app, with an optional timeout parameter.
      operationId: Machines_restart
      parameters:
      - description: Fly App Name
        in: path
        name: app_name
        required: true
        type: string
      - description: Machine ID
        in: path
        name: machine_id
        required: true
        type: string
      - description: Restart timeout as a Go duration string or number of seconds
        in: query
        name: timeout
        type: string
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Restart Machine
      tags:
      - Machines
  /apps/{app_name}/machines/{machine_id}/signal:
    post:
      description: |
        Send a signal to a specific Machine within an app using the details provided in the request body.
      operationId: Machines_signal
      parameters:
      - description: Fly App Name
        in: path
        name: app_name
        required: true
        type: string
      - description: Machine ID
        in: path
        name: machine_id
        required: true
        type: string
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/SignalRequest'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Signal Machine
      tags:
      - Machines
  /apps/{app_name}/machines/{machine_id}/start:
    post:
      description: |
        Start a specific Machine within an app.
      operationId: Machines_start
      parameters:
      - description: Fly App Name
        in: path
        name: app_name
        required: true
        type: string
      - description: Machine ID
        in: path
        name: machine_id
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Start Machine
      tags:
      - Machines
  /apps/{app_name}/machines/{machine_id}/stop:
    post:
      description: |
        Stop a specific Machine within an app, with an optional request body to specify signal and timeout.
      operationId: Machines_stop
      parameters:
      - description: Fly App Name
        in: path
        name: app_name
        required: true
        type: string
      - description: Machine ID
        in: path
        name: machine_id
        required: true
        type: string
      - description: Optional request body
        in: body
        name: request
        schema:
          $ref: '#/definitions/StopRequest'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Stop Machine
      tags:
      - Machines
  /apps/{app_name}/machines/{machine_id}/uncordon:
    post:
      description: |
        “Cordoning” a Machine refers to disabling its services, so the Fly Proxy won’t route requests to it. In flyctl this is used by blue/green deployments; one set of Machines is started up with services disabled, and when they are all healthy, the services are enabled on the new Machines and disabled on the old ones.
      operationId: Machines_uncordon
      parameters:
      - description: Fly App Name
        in: path
        name: app_name
        required: true
        type: string
      - description: Machine ID
        in: path
        name: machine_id
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Uncordon Machine
      tags:
      - Machines
  /apps/{app_name}/machines/{machine_id}/versions:
    get:
      description: |
        List all versions of the configuration for a specific Machine within an app.
      operationId: Machines_list_versions
      parameters:
      - description: Fly App Name
        in: path
        name: app_name
        required: true
        type: string
      - description: Machine ID
        in: path
        name: machine_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/MachineVersion'
            type: array
      summary: List Versions
      tags:
      - Machines
  /apps/{app_name}/machines/{machine_id}/wait:
    get:
      description: |
        Wait for a Machine to reach a specific state. Specify the desired state with the state parameter. See the [Machine states table](https://fly.io/docs/machines/working-with-machines/#machine-states) for a list of possible states. The default for this parameter is `started`.

        This request will block for up to 60 seconds. Set a shorter timeout with the timeout parameter.
      operationId: Machines_wait
      parameters:
      - description: Fly App Name
        in: path
        name: app_name
        required: true
        type: string
      - description: Machine ID
        in: path
        name: machine_id
        required: true
        type: string
      - description: instance? version? TODO
        in: query
        name: instance_id
        type: string
      - description: wait timeout. default 60s
        in: query
        name: timeout
        type: integer
      - description: desired state
        enum:
        - started
        - stopped
        - destroyed
        in: query
        name: state
        type: string
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Wait for State
      tags:
      - Machines
  /apps/{app_name}/volumes:
    get:
      description: |
        List all volumes associated with a specific app.
      operationId: Volumes_list
      parameters:
      - description: Fly App Name
        in: path
        name: app_name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Volume'
            type: array
      summary: List Volumes
      tags:
      - Volumes
    post:
      description: |
        Create a volume for a specific app using the details provided in the request body.
      operationId: Volumes_create
      parameters:
      - description: Fly App Name
        in: path
        name: app_name
        required: true
        type: string
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/CreateVolumeRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Volume'
      summary: Create Volume
      tags:
      - Volumes
  /apps/{app_name}/volumes/{volume_id}:
    delete:
      description: |
        Delete a specific volume within an app by volume ID.
      operationId: Volume_delete
      parameters:
      - description: Fly App Name
        in: path
        name: app_name
        required: true
        type: string
      - description: Volume ID
        in: path
        name: volume_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Volume'
      summary: Destroy Volume
      tags:
      - Volumes
    get:
      description: |
        Retrieve details about a specific volume by its ID within an app.
      operationId: Volumes_get_by_id
      parameters:
      - description: Fly App Name
        in: path
        name: app_name
        required: true
        type: string
      - description: Volume ID
        in: path
        name: volume_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Volume'
      summary: Get Volume
      tags:
      - Volumes
    post:
      description: |
        Update a volume's configuration using the details provided in the request body.
      operationId: Volumes_update
      parameters:
      - description: Fly App Name
        in: path
        name: app_name
        required: true
        type: string
      - description: Volume ID
        in: path
        name: volume_id
        required: true
        type: string
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/UpdateVolumeRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Volume'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update Volume
      tags:
      - Volumes
  /apps/{app_name}/volumes/{volume_id}/extend:
    put:
      description: |
        Extend a volume's size within an app using the details provided in the request body.
      operationId: Volumes_extend
      parameters:
      - description: Fly App Name
        in: path
        name: app_name
        required: true
        type: string
      - description: Volume ID
        in: path
        name: volume_id
        required: true
        type: string
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/ExtendVolumeRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ExtendVolumeResponse'
      summary: Extend Volume
      tags:
      - Volumes
  /apps/{app_name}/volumes/{volume_id}/snapshots:
    get:
      description: |
        List all snapshots for a specific volume within an app.
      operationId: Volumes_list_snapshots
      parameters:
      - description: Fly App Name
        in: path
        name: app_name
        required: true
        type: string
      - description: Volume ID
        in: path
        name: volume_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/VolumeSnapshot'
            type: array
      summary: List Snapshots
      tags:
      - Volumes
    post:
      description: |
        Create a snapshot for a specific volume within an app.
      operationId: createVolumeSnapshot
      parameters:
      - description: Fly App Name
        in: path
        name: app_name
        required: true
        type: string
      - description: Volume ID
        in: path
        name: volume_id
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Create Snapshot
      tags:
      - Volumes
produces:
- application/json
schemes:
- https
swagger: "2.0"
tags:
- description: A Fly App is an abstraction for a group of Machines running your code
    on Fly.io, along with the configuration, provisioned resources, and data we need
    to keep track of to run and route to your Machines. Read more [here](https://fly.io/docs/reference/apps/).
  name: Apps
- description: Fly Machines are the compute behind the Fly.io platform. They are fast-launching
    VMs that can be started and stopped at subsecond speeds. A Machine is the configuration
    and state for a single VM running on our platform. Every Machine will belong to
    a Fly App; Apps can have more than one Machine. Read more [here](https://fly.io/docs/machines/).
  name: Machines
- description: Fly Volumes are local persistent storage for Fly Machines. You can
    access and write to a volume on a Machine just like a regular directory. Use volumes
    to store your database files, to save your app’s state, such as configuration
    and session or user data, or for any information that needs to persist after deploy
    or restart. Read more [here](https://fly.io/docs/reference/volumes/).
  name: Volumes
