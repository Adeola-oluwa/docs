---
title: Working with the Machines API
objective: Get started with the Fly Machines API.
layout: docs
nav: machines
---

You can create, delete, and interact with Fly Apps, Fly Machines and Fly Volumes directly using the Machines REST API.

These documents assume that you have flyctl and cURL installed, and have authenticated to Fly.io. Examples assume that you have two environment variables set: `FLY_API_TOKEN`, the authorization token to use with the API call, and `FLY_API_HOSTNAME`, the base URL you're reaching the API at. 

## API URLs

There are two base URLs available to connect to the Machines API service.

**Internal base endpoint:** `http://_api.internal:4280`

**Public base endpoint:** `https://api.machines.dev`

From within your Fly.io [private WireGuard network](/docs/networking/private-networking/), you can connect to the API directly using the internal endpoint. From outside the Fly.io WireGuard mesh, use the public endpoint; this proxies your request to the API.

## Authentication

All requests must include an API Token in the HTTP Headers as follows:

```
Authorization: Bearer <fly_api_token>
```


You can use an org-wide token, with the power to create and destroy apps using the following.


```
export FLY_API_TOKEN=$(fly auth token)
```

The `fly auth token` command returns the token you're currently logged in with.

You can generate a token scoped to a single app with `fly tokens create deploy -a <app-name>`

```
export FLY_API_TOKEN=$(fly tokens create deploy -a gah)
```

## Local setup

Set these environment variables to make the following commands easier to use.


Prepare an environment variable

```cmd
export FLY_API_HOSTNAME="https://api.machines.dev" # set to http://_api.internal:4280 when using WireGuard
```



```bash
$ export FLY_API_TOKEN=$(fly auth token)
```

For local development, you can see the token used by `flyctl` with `fly auth token`. You can also create a new auth token in the [personal access token section of the fly.io dashboard](https://fly.io/user/personal_access_tokens).


### Using the private Machines API endpoint

Accessing the public API endpoint is 
You can still access your Machines directly over a WireGuard VPN, and use the private Machines API endpoint: `http://_api.internal:4280`. This method requires more setup.

/docs/networking/private-networking/#private-network-vpn
## Setting up the environment

### Local setup

## API access from Fly Machines

In order to access this API from Fly Machines, make the token available as a secret:

```cmd
fly secrets set FLY_API_TOKEN=$(fly auth token)
```

A convenient way to set the `FLY_API_HOSTNAME` is to add it to your `Dockerfile`:

```dockerfile
ENV FLY_API_HOSTNAME="https://api.machines.dev"
```

<section class="important">The cURL examples in this document are for an app named `my-app-name`. Replace `my-app-name` with the name of your app. Also replace any example Machine IDs with your app's Machine IDs.
</section>

## Machines API reference


## Related topics

- [Apps resource](/docs/machines/api/apps-resource/) reference
- [Machines resource](/docs/machines/api/machines-resource/) reference
- [Volumes resource](/docs/machines/api/volumes-resource/) reference

We have a OpenAPI 3.0 specification available at [docs.machines.dev](https://docs.machines.dev) for the Machines API, so that you can autogenerate clients in your preferred language.